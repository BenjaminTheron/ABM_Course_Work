import random


class Order:
  """
  Outlines the class for a given order. Each order has a list of parameters/
  attributes it must store to be valid.

  It is assumed that all orders are market orders, which are immediately executed,
  partially or otherwise. -> Try simulating limit orders, stop orders, stop limit orders.
  """

  def __init__(self, trader_id, order_type, price, quantity, time):
    # Here the time is the time the order is submitted to the LOB (must be changed later
    # Otherwise will store the time it was generated by the trader)
    self.trader_id = trader_id  # The id of the trader issuing the trade
    self.order_id = random.randint(0, 10_000_000_000)
    # order_id is a random number between 0 and 10 billion
    self.order_type = order_type
    self.price = price
    self.quantity = quantity
    self.time = time

  def Set_Time(self, time):
    """
    Updates the time attribute for a given order.
    """
    self.time = time

  def Set_Quantity(self, quantity):
    """
    Updates the quantity attribute for a given order.
    Used for partially matched orders.
    """
    self.quantity = quantity
